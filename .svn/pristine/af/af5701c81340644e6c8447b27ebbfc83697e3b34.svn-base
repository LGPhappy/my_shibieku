package com.xdja.zdsb.view;

import java.io.File;

import com.xdja.zdsb.R;
import com.xdja.zdsb.utils.PictureRecognize;
import com.xdja.zdsb.utils.RecognizerInterface;

import android.app.Activity;
import android.content.Intent;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.widget.ImageView;


public class PictureRecognizeActivity extends Activity {

    private ImageView pre_view;
    private ImageView imageView5;
    
    private String picturePath;
    
    private int picType;

    private Animation animation;
    @Override
    protected void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        setContentView(R.layout.pictrue_recognize_activity);
        pre_view = (ImageView)findViewById(R.id.pre_view);
        imageView5 = (ImageView)findViewById(R.id.imageView5);
        setAnimation();

        Intent intent = getIntent();
        
        picType = intent.getIntExtra("picture", 0);
        picturePath = intent.getStringExtra("path");
        Uri uri = Uri.fromFile(new File(picturePath));
        pre_view.setImageURI(uri);
        PictureRecognizeTask pictureRecognizeTask = new PictureRecognizeTask();
        pictureRecognizeTask.execute();
    }


    class PictureRecognizeTask extends AsyncTask<String, Object, String> {

        @Override
        protected String doInBackground(String... params) {

            PictureRecognize pictureRecognize = new PictureRecognize(PictureRecognizeActivity.this);
            pictureRecognize.doRecognize(picturePath, picType, recognizerInterface);
            return null;
        }

        @Override
        protected void onPostExecute(String result) {

        }
    }
    
    
    
    private void setAnimation() {

        animation = AnimationUtils.loadAnimation(this, R.anim.translate);
        imageView5.setAnimation(animation);
        animation.start();
    }

    RecognizerInterface recognizerInterface = new RecognizerInterface() {

        @Override
        public void onRecognizeSucceed(String result) {
            
        }

        @Override
        public void onRecognizeFailed() {

        }
        
    };

}
