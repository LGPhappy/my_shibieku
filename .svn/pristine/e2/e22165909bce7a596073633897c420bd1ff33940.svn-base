package com.xdja.zdsb.utils;


import com.wintone.plateid.AuthService;
import com.wintone.plateid.PlateAuthParameter;
import com.xdja.zdsb.R;

import android.app.Service;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;

import android.os.IBinder;
import android.widget.Toast;

public class AuthTools {

    protected static final String TAG = "AuthTools";
    private Context context;
    private AuthInterface authInterface;
    private int ReturnAuthority = -1;
    private AuthService.MyBinder authBinder;

    public AuthTools (Context context, AuthInterface authInterface) {
        this.context = context;
        this.authInterface = authInterface;
    }

    public void start() {
        Intent authIntent = new Intent(context, AuthService.class);
        
        boolean b = context.bindService(authIntent, authConn, Service.BIND_AUTO_CREATE);
        if (b) {
            Zzlog.out(TAG, "bind service()");    
        } else {
            Zzlog.out(TAG, "bind service() failed!!!");
        }
    }

    private ServiceConnection authConn = new ServiceConnection() {
        @Override
        public void onServiceDisconnected(ComponentName name) {
            authBinder = null;
        }

        @Override
        public void onServiceConnected(ComponentName name, IBinder service) {

            Zzlog.out(TAG, "onServiceConnected()");

            authBinder = (AuthService.MyBinder) service;
            Toast.makeText(context, R.string.auth_check_service_bind_success, Toast.LENGTH_SHORT).show();
            try {
                PlateAuthParameter pap = new PlateAuthParameter();
                pap.sn = Constant.DEVCODE;
                pap.devCode = Constant.DEVCODE;
                ReturnAuthority = authBinder.getAuth(pap);

                Zzlog.out(TAG, "onServiceConnected() ReturnAuthority = " + ReturnAuthority);

                if (authInterface != null) {
                    if (ReturnAuthority != 0) {
                        authInterface.onAuthFailed();
                    } else {
                        authInterface.onAuthSucceed();
                    }
                }
            }catch (Exception e) {
                if (authInterface != null) authInterface.onAuthFailed();
                e.printStackTrace();
            }finally{
                if (authBinder != null) {
                    context.unbindService(authConn);
                }
            }
        }
    };
    
}
