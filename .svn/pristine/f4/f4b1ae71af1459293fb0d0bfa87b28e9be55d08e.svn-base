package com.xdja.zdsb.view;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Rect;
import android.util.Log;
import android.view.View;

public final class FoucsView extends View {
    private static final String TAG = "ViewfinderView";
    private final Paint paint;
    private final Paint paintLine;
    public Rect frame;
    int w, h;
    private boolean boo = false;

    public int length = 0;
    public int t, b, l, r;

    // defalut boo is false

    public FoucsView(Context context, int w, int h) {
        super(context);
        this.w = w;
        this.h = h;
        paint = new Paint();
        paintLine = new Paint();
    }

    @Override
    public void onDraw(Canvas canvas) {
        int width = canvas.getWidth();
        int height = canvas.getHeight();

        if (boo) {

            if (height < 1080 || height > 1620) {
                length = height / 4;
            } else {
                length = 250;
            }
        } else {

            if (width < 1080 || width > 1620) {
                length = width / 4;
            } else {
                length = 250;
            }
        }
        Log.i(TAG, "onDraw( ) boo = " + boo + ", length = " + length);
        

        l = width / 2 - length * 4 / 5;
        r = width / 2 + length * 4 / 5;
        t = height / 2 - length/2;
        b = height / 2 + length/2;
        frame = new Rect(l, t, r, b);

        Log.i(TAG, "Rect(l, t, r, b) = " + l + ", " + t + ", " + r + ", " + b);

//        paint.setColor(Color.argb(128, 0, 0, 0));
//        canvas.drawRect(0, 0, width, frame.top, paint);
//        canvas.drawRect(0, frame.top, frame.left, frame.bottom + 1, paint);
//        canvas.drawRect(frame.right + 1, frame.top, width, frame.bottom + 1, paint);
//        canvas.drawRect(0, frame.bottom + 1, width, height, paint);

        paintLine.setColor(Color.rgb(0, 255, 0));
        paintLine.setStrokeWidth(10);
        paintLine.setAntiAlias(true);
        canvas.drawLine(l, t, l + 50, t, paintLine);
        canvas.drawLine(l, t, l, t + 50, paintLine);
        canvas.drawLine(r, t, r - 50, t, paintLine);
        canvas.drawLine(r, t, r, t + 50, paintLine);
        canvas.drawLine(l, b, l + 50, b, paintLine);
        canvas.drawLine(l, b, l, b - 50, paintLine);
        canvas.drawLine(r, b, r - 50, b, paintLine);
        canvas.drawLine(r, b, r, b - 50, paintLine);
        // }

        paintLine.setColor(Color.rgb(250, 0, 0));
        paintLine.setStrokeWidth(4);

        int x = width/2;
        int y = height/2;
        canvas.drawLine(x, y - 25 , x, y + 25, paintLine);
        canvas.drawLine(x - 25, y, x + 25, y, paintLine);
    }

    public boolean isBoo() {
        return boo;
    }

    public void setBoo(boolean boo) {
        this.boo = boo;
    }

}
